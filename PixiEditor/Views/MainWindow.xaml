<Window x:Class="PixiEditor.MainWindow" MinHeight="500" MinWidth="1100"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:PixiEditor.ViewModels"
        xmlns:vws="clr-namespace:PixiEditor.Views"
        xmlns:tools="clr-namespace:PixiEditor.Models.Tools"
        xmlns:converters="clr-namespace:PixiEditor.Helpers.Converters"
        xmlns:behaviors="clr-namespace:PixiEditor.Helpers.Behaviours"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:ui="clr-namespace:PixiEditor.Helpers.UI"
        xmlns:cmd="http://www.galasoft.ch/mvvmlight" 
        xmlns:avalondock="https://github.com/Dirkster99/AvalonDock"
        xmlns:colorpicker="clr-namespace:ColorPicker;assembly=ColorPicker"
        mc:Ignorable="d" WindowStyle="None" Initialized="MainWindow_Initialized"
        Title="PixiEditor" Name="mainWindow" Height="1000" Width="1600" Background="{StaticResource MainColor}"
        WindowStartupLocation="CenterScreen" WindowState="Maximized" DataContext="{DynamicResource ViewModelMain}">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32"
                      ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <vm:ViewModelMain x:Key="ViewModelMain" />
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:BoolToIntConverter x:Key="BoolToIntConverter" />
        <converters:FloatNormalizeConverter x:Key="FloatNormalizeConverter" />
        <converters:DoubleToIntConverter x:Key="DoubleToIntConverter"/>
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="CommandBinding_CanExecute"
                        Executed="CommandBinding_Executed_Close" />
        <CommandBinding Command="{x:Static SystemCommands.MaximizeWindowCommand}"
                        CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Maximize" />
        <CommandBinding Command="{x:Static SystemCommands.MinimizeWindowCommand}"
                        CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Minimize" />
        <CommandBinding Command="{x:Static SystemCommands.RestoreWindowCommand}" CanExecute="CommandBinding_CanExecute"
                        Executed="CommandBinding_Executed_Restore" />
    </Window.CommandBindings>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="KeyDown">
            <cmd:EventToCommand Command="{Binding IoSubViewModel.KeyDownCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyUp">
            <cmd:EventToCommand Command="{Binding IoSubViewModel.KeyUpCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="ContentRendered">
            <i:InvokeCommandAction Command="{Binding OnStartupCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding CloseWindowCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid Name="mainGrid" Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="45" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="290" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="40" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Background="{StaticResource MainColor}">
            <Image DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Top"
                   Source="/Images/PixiEditorLogo.png" Width="20" Height="20" Margin="5,5,0,0" />
            <Menu WindowChrome.IsHitTestVisibleInChrome="True" Margin="10, 4, 0, 0" DockPanel.Dock="Left"
                  HorizontalAlignment="Left" VerticalAlignment="Top" Background="Transparent" IsMainMenu="True">
                <Menu.Resources>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource menuItemStyle}" />
                </Menu.Resources>
                <MenuItem Header="_File">
                    <MenuItem InputGestureText="CTRL+N" Header="_New" Command="{Binding FileSubViewModel.OpenNewFilePopupCommand}" />
                    <MenuItem Header="_Open" InputGestureText="Ctrl+O" Command="{Binding FileSubViewModel.OpenFileCommand}" />
                    <MenuItem Header="_Save" InputGestureText="Ctrl+S" Command="{Binding FileSubViewModel.SaveDocumentCommand}" />
                    <MenuItem Header="_Save As..." InputGestureText="Ctrl+Shift+S"
                              Command="{Binding FileSubViewModel.SaveDocumentCommand}" CommandParameter="AsNew" />
                    <MenuItem Header="_Export" InputGestureText="Ctrl+Shift+Alt+S" Command="{Binding FileSubViewModel.ExportFileCommand}" />
                    <Separator />
                    <MenuItem Header="_Exit" Command="{x:Static SystemCommands.CloseWindowCommand}" />
                </MenuItem>
                <MenuItem Header="_Edit">
                    <MenuItem Header="_Undo" InputGestureText="Ctrl+Z" Command="{Binding UndoSubViewModel.UndoCommand}" />
                    <MenuItem Header="_Redo" InputGestureText="Ctrl+Y" Command="{Binding UndoSubViewModel.RedoCommand}" />
                    <Separator />
                    <MenuItem Header="_Cut" Command="{Binding ClipboardSubViewModel.CutCommand}" InputGestureText="Ctrl+X" />
                    <MenuItem Header="_Copy" Command="{Binding ClipboardSubViewModel.CopyCommand}" InputGestureText="Ctrl+C" />
                    <MenuItem Header="_Paste" Command="{Binding ClipboardSubViewModel.PasteCommand}" InputGestureText="Ctrl+V" />
                    <MenuItem Header="_Duplicate" Command="{Binding ClipboardSubViewModel.DuplicateCommand}" InputGestureText="Ctrl+D" />
                    <Separator />
                    <MenuItem Header="_Delete Selected" Command="{Binding DocumentSubViewModel.DeletePixelsCommand}"
                              InputGestureText="Delete" />
                    <Separator />
                    <MenuItem Header="_Settings" Command="{Binding MiscSubViewModel.OpenSettingsWindowCommand}" />
                </MenuItem>
                <MenuItem Header="_Select">
                    <MenuItem Header="_Select All" Command="{Binding SelectionSubViewModel.SelectAllCommand}" InputGestureText="Ctrl+A" />
                    <MenuItem Header="_Deselect" Command="{Binding SelectionSubViewModel.DeselectCommand}" InputGestureText="Ctrl+Shit+A" />
                </MenuItem>
                <MenuItem Header="_Document">
                    <MenuItem Header="Resize Document..." Command="{Binding DocumentSubViewModel.OpenResizePopupCommand}"
                              InputGestureText="Ctrl+Shift+I" />
                    <MenuItem Header="Resize Canvas..." Command="{Binding DocumentSubViewModel.OpenResizePopupCommand}"
                              CommandParameter="canvas" InputGestureText="Ctrl+Shift+C" />
                    <MenuItem Header="Clip Canvas" Command="{Binding DocumentSubViewModel.ClipCanvasCommand}" />
                    <Separator/>
                    <MenuItem Header="Center Content" Command="{Binding DocumentSubViewModel.CenterContentCommand}" />
                </MenuItem>
                <MenuItem Header="_Help">
                    <MenuItem Header="Documentation" Command="{Binding MiscSubViewModel.OpenHyperlinkCommand}"
                              CommandParameter="https://github.com/PixiEditor/PixiEditor/wiki"/>
                    <MenuItem Header="Repository" Command="{Binding MiscSubViewModel.OpenHyperlinkCommand}"
                              CommandParameter="https://github.com/PixiEditor/PixiEditor"/>
                    <MenuItem Header="Shortcuts" Command="{Binding MiscSubViewModel.OpenHyperlinkCommand}"
                              CommandParameter="https://github.com/PixiEditor/PixiEditor/wiki/Shortcuts"/>
                    <Separator/>
                    <MenuItem Header="License" Command="{Binding MiscSubViewModel.OpenHyperlinkCommand}"
                              CommandParameter="https://github.com/PixiEditor/PixiEditor/blob/master/LICENSE"/>
                    <MenuItem Header="Third Party Licenses" Command="{Binding MiscSubViewModel.OpenHyperlinkCommand}"
                              CommandParameter="https://github.com/PixiEditor/PixiEditor/wiki/Third-party-licenses"/>
                </MenuItem>
            </Menu>
            <StackPanel DockPanel.Dock="Right" VerticalAlignment="Top" Orientation="Horizontal"
                        HorizontalAlignment="Right" WindowChrome.IsHitTestVisibleInChrome="True">
                <Button Style="{StaticResource MinimizeButtonStyle}" WindowChrome.IsHitTestVisibleInChrome="True"
                        ToolTip="Minimize"
                        Command="{x:Static SystemCommands.MinimizeWindowCommand}" />
                <Button x:Name="RestoreButton" Visibility="Visible" Style="{StaticResource RestoreButtonStyle}"
                        Command="{x:Static SystemCommands.RestoreWindowCommand}"
                        WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Restore" />
                <Button x:Name="MaximizeButton" Visibility="Collapsed" Style="{StaticResource MaximizeButtonStyle}"
                        Command="{x:Static SystemCommands.MaximizeWindowCommand}"
                        WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Maximize" />
                <Button Style="{StaticResource CloseButtonStyle}" WindowChrome.IsHitTestVisibleInChrome="True"
                        ToolTip="Close"
                        Command="{x:Static SystemCommands.CloseWindowCommand}" />
            </StackPanel>
        </DockPanel>
        <StackPanel Background="{StaticResource AccentColor}" Orientation="Horizontal" Grid.ColumnSpan="3" Grid.Column="0"
                    Margin="0,30,146,0" Grid.Row="0" Grid.RowSpan="2">
            <ItemsControl ItemsSource="{Binding BitmapManager.SelectedTool.Toolbar.Settings}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" Margin="10, 0, 0, 0" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10,0,10,0">
                            <Label
                                Visibility="{Binding HasLabel, Converter={StaticResource BoolToVisibilityConverter}}"
                                Foreground="White" Content="{Binding Label}" />
                            <ContentPresenter Content="{Binding SettingControl}" />
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
        <Grid Grid.Column="1" Grid.Row="2" Background="#303030" Margin="0,7,5,0">
            <Grid>
                <vws:MainDrawingPanel ZoomPercentage="{Binding ViewportSubViewModel.ZoomPercentage, Mode=TwoWay}" Center="{Binding ViewportSubViewModel.RecenterZoombox, Mode=TwoWay}" x:Name="DrawingPanel"
                                      CenterOnStart="True" Cursor="{Binding ToolsSubViewModel.ToolCursor}" 
                                      MiddleMouseClickedCommand="{Binding ToolsSubViewModel.SelectToolCommand}" 
                                      MiddleMouseClickedCommandParameter="{x:Static tools:ToolType.MoveViewport}"
                                      ViewportPosition="{Binding ViewportSubViewModel.ViewportPosition, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseMove">
                            <i:InvokeCommandAction Command="{Binding IoSubViewModel.MouseMoveCommand}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{Binding IoSubViewModel.MouseDownCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <i:Interaction.Behaviors>
                        <behaviors:MouseBehaviour RelativeTo="{Binding ElementName=DrawingPanel, Path=Item}"
                                                  MouseX="{Binding IoSubViewModel.MouseXOnCanvas, Mode=OneWayToSource}"
                                                  MouseY="{Binding IoSubViewModel.MouseYOnCanvas, Mode=OneWayToSource}" />
                    </i:Interaction.Behaviors>
                    <vws:MainDrawingPanel.Item>
                        <Canvas Width="{Binding BitmapManager.ActiveDocument.Width}"
                                Height="{Binding BitmapManager.ActiveDocument.Height}" VerticalAlignment="Center"
                                HorizontalAlignment="Center">
                            <Image Source="/Images/transparentbg.png"
                                   Height="{Binding BitmapManager.ActiveDocument.Height}"
                                   Width="{Binding BitmapManager.ActiveDocument.Width}" Opacity="0.9"
                                   Stretch="UniformToFill" />
                            <Image Source="{Binding BitmapManager.PreviewLayer.LayerBitmap}" Panel.ZIndex="2"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" Stretch="Uniform"
                                   Width="{Binding BitmapManager.PreviewLayer.Width}"
                                   Height="{Binding BitmapManager.PreviewLayer.Height}" 
                                   Margin="{Binding BitmapManager.PreviewLayer.Offset}"/>
                            <ItemsControl ItemsSource="{Binding BitmapManager.ActiveDocument.Layers}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Image VerticalAlignment="Top" HorizontalAlignment="Left" Source="{Binding LayerBitmap}"
                                               Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                               RenderOptions.BitmapScalingMode="NearestNeighbor" Stretch="Uniform"
                                               Opacity="{Binding Opacity}"
                                               Width="{Binding Width}" Height="{Binding Height}" Margin="{Binding Offset}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <Image VerticalAlignment="Top" HorizontalAlignment="Left" Source="{Binding SelectionSubViewModel.ActiveSelection.SelectionLayer.LayerBitmap}"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" Stretch="Uniform"
                                   Width="{Binding SelectionSubViewModel.ActiveSelection.SelectionLayer.Width}"
                                   Height="{Binding SelectionSubViewModel.ActiveSelection.SelectionLayer.Height}" 
                                   Margin="{Binding SelectionSubViewModel.ActiveSelection.SelectionLayer.Offset}" />
                        </Canvas>
                    </vws:MainDrawingPanel.Item>
                </vws:MainDrawingPanel>
            </Grid>
        </Grid>

        <StackPanel Orientation="Vertical" Cursor="Arrow" Grid.Row="2" Grid.Column="0" Margin="0,7,5,0"
                    Background="{StaticResource AccentColor}" Grid.RowSpan="2">

            <ItemsControl ItemsSource="{Binding ToolsSubViewModel.ToolSet}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button BorderBrush="White"
                                BorderThickness="{Binding IsActive, Converter={StaticResource BoolToIntConverter}}"
                                Style="{StaticResource ToolButtonStyle}"
                                Command="{Binding Path=DataContext.ToolsSubViewModel.SelectToolCommand,
                            RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                CommandParameter="{Binding ToolType}" ToolTip="{Binding Tooltip}">
                            <Button.Background>
                                <ImageBrush ImageSource="{Binding ImagePath}" Stretch="Uniform" />
                            </Button.Background>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>

        <Grid Grid.Column="2" Background="{StaticResource AccentColor}" Margin="0,30,0,0" Grid.RowSpan="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="340" />
                <RowDefinition Height="250*" />
                <RowDefinition Height="209*" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="2" Orientation="Vertical" ZIndex="15">
            </StackPanel>
            <colorpicker:StandardColorPicker Grid.Row="0" SelectedColor="{Binding ColorsSubViewModel.PrimaryColor, Mode=TwoWay}"
                             SecondaryColor="{Binding ColorsSubViewModel.SecondaryColor, Mode=TwoWay}" />
            <avalondock:DockingManager Foreground="White" Background="{StaticResource AccentColor}" BorderThickness="0"
                                       Grid.Row="1">
                <avalondock:LayoutRoot x:Name="LayoutRoot">
                    <avalondock:LayoutPanel Orientation="Vertical">
                        <avalondock:LayoutAnchorablePane>
                            <avalondock:LayoutAnchorable ContentId="layers" Title="Layers" CanHide="False"
                                                         CanClose="False" CanAutoHide="False"
                                                         CanDockAsTabbedDocument="False" CanFloat="True">
                                <StackPanel Orientation="Vertical">
                                    <Button Command="{Binding LayersSubViewModel.NewLayerCommand}" Height="30" Content="New Layer"
                                            HorizontalAlignment="Stretch" Margin="5"
                                            Style="{StaticResource DarkRoundButton}" />
                                    <StackPanel Orientation="Horizontal" Margin="10,0">
                                        <Label Content="Opacity" Foreground="White" VerticalAlignment="Center"/>
                                        <vws:NumberInput Min="0" Max="100" Width="40" Height="20" VerticalAlignment="Center"
                                                         Value="{Binding BitmapManager.ActiveDocument.ActiveLayer.Opacity, Mode=TwoWay, 
                                            Converter={StaticResource FloatNormalizeConverter}}" />
                                        <Label Content="%" Foreground="White" VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <Separator Background="{StaticResource BrighterAccentColor}" Margin="0,10,0,10"/>
                                    <ItemsControl ItemsSource="{Binding BitmapManager.ActiveDocument.Layers}"
                                                  x:Name="layersItemsControl" AlternationCount="9999">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <ui:ReversedOrderStackPanel Orientation="Vertical" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <vws:LayerItem LayerIndex="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},
                            Path=(ItemsControl.AlternationIndex)}" SetActiveLayerCommand="{Binding Path=DataContext.LayersSubViewModel.SetActiveLayerCommand, ElementName=mainWindow}"
                                                               LayerName="{Binding Name, Mode=TwoWay}" IsActive="{Binding IsActive, Mode=TwoWay}"
                                                               IsRenaming="{Binding IsRenaming, Mode=TwoWay}"
                                                               MoveToBackCommand="{Binding DataContext.LayersSubViewModel.MoveToBackCommand, ElementName=mainWindow}"
                                                               MoveToFrontCommand="{Binding DataContext.LayersSubViewModel.MoveToFrontCommand, ElementName=mainWindow}">
                                                    <vws:LayerItem.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="Delete"
                                                                              Command="{Binding LayersSubViewModel.DeleteLayerCommand, Source={StaticResource ViewModelMain}}"
                                                                              CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},
                            Path=(ItemsControl.AlternationIndex)}" />
                                                            <MenuItem Header="Rename"
                                                                              Command="{Binding LayersSubViewModel.RenameLayerCommand, Source={StaticResource ViewModelMain}}"
                                                                              CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},
                            Path=(ItemsControl.AlternationIndex)}" />
                                                            <MenuItem Header="Move to front"
                                                                              Command="{Binding LayersSubViewModel.MoveToFrontCommand, Source={StaticResource ViewModelMain}}"
                                                                              CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},
                            Path=(ItemsControl.AlternationIndex)}" />
                                                            <MenuItem Header="Move to back"
                                                                              Command="{Binding LayersSubViewModel.MoveToBackCommand, Source={StaticResource ViewModelMain}}"
                                                                              CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},
                            Path=(ItemsControl.AlternationIndex)}" />
                                                        </ContextMenu>
                                                    </vws:LayerItem.ContextMenu>
                                                </vws:LayerItem>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                            </avalondock:LayoutAnchorable>
                        </avalondock:LayoutAnchorablePane>
                    </avalondock:LayoutPanel>
                </avalondock:LayoutRoot>
                <avalondock:DockingManager.Theme>
                    <avalondock:Vs2013DarkTheme />
                </avalondock:DockingManager.Theme>
            </avalondock:DockingManager>
            <avalondock:DockingManager Grid.Row="2" Background="{StaticResource AccentColor}">
                <avalondock:LayoutRoot>
                    <avalondock:LayoutPanel>
                        <avalondock:LayoutAnchorablePane>
                            <avalondock:LayoutAnchorable ContentId="swatches" Title="Swatches" CanHide="False"
                                                         CanClose="False" CanAutoHide="False"
                                                         CanDockAsTabbedDocument="False" CanFloat="True">
                                <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                              VerticalScrollBarVisibility="Auto">
                                    <ItemsControl ItemsSource="{Binding BitmapManager.ActiveDocument.Swatches}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel Margin="10,0,0,0" Orientation="Horizontal"
                                                           VerticalAlignment="Top" HorizontalAlignment="Left" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Width="50" Height="50" Margin="2">
                                                    <Border Width="48" Height="48">
                                                        <Border.Background>
                                                            <ImageBrush ImageSource="../Images/transparentbg.png"
                                                                        Stretch="UniformToFill">
                                                                <ImageBrush.RelativeTransform>
                                                                    <ScaleTransform ScaleX="6" ScaleY="6" CenterX="0.5"
                                                                                    CenterY="0.5" />
                                                                </ImageBrush.RelativeTransform>
                                                            </ImageBrush>
                                                        </Border.Background>
                                                    </Border>
                                                    <Border BorderThickness="0.25" Cursor="Hand" BorderBrush="White">
                                                        <Border.Background>
                                                            <SolidColorBrush Color="{Binding}" />
                                                        </Border.Background>
                                                    </Border>
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseDown">
                                                            <i:InvokeCommandAction
                                                                Command="{Binding
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.ColorsSubViewModel.SelectColorCommand}"
                                                                CommandParameter="{Binding}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                    <Grid.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="Remove" Foreground="White"
                                                                      Command="{Binding ColorsSubViewModel.RemoveSwatchCommand, Source={StaticResource ViewModelMain}}"
                                                                      CommandParameter="{Binding}" />
                                                        </ContextMenu>
                                                    </Grid.ContextMenu>
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </ScrollViewer>
                            </avalondock:LayoutAnchorable>
                        </avalondock:LayoutAnchorablePane>
                    </avalondock:LayoutPanel>
                </avalondock:LayoutRoot>
                <avalondock:DockingManager.Theme>
                    <avalondock:Vs2013DarkTheme />
                </avalondock:DockingManager.Theme>
            </avalondock:DockingManager>
        </Grid>
        <DockPanel Grid.Row="3" Grid.Column="1">
            <TextBlock Text="{Binding BitmapManager.SelectedTool.ActionDisplay}" Foreground="White" FontSize="16"  VerticalAlignment="Center"/>
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                <TextBlock Text="X:" Foreground="White" FontSize="16"/>
                <TextBlock Margin="4,0,10,0" Text="{Binding IoSubViewModel.MouseXOnCanvas, Converter={StaticResource DoubleToIntConverter}}" Foreground="White" FontSize="16"/>
                <TextBlock Text="Y:" Foreground="White" FontSize="16"/>
                <TextBlock Margin="4,0,10,0" Text="{Binding IoSubViewModel.MouseYOnCanvas, Converter={StaticResource DoubleToIntConverter}}" Foreground="White" FontSize="16"/>
            </StackPanel>
        </DockPanel>
        <StackPanel Margin="10,0,0,0" VerticalAlignment="Center" Grid.Row="3"
                       Grid.Column="3" Orientation="Horizontal">
            <Button Style="{StaticResource BaseDarkButton}" 
                    Visibility="{Binding UpdateSubViewModel.UpdateReadyToInstall, Converter={StaticResource BoolToVisibilityConverter}}" FontSize="14" Height="20" 
                    Command="{Binding UpdateSubViewModel.RestartApplicationCommand}">Restart</Button>
            <TextBlock VerticalAlignment="Center" Padding="10" HorizontalAlignment="Right"
                       Foreground="White" FontSize="14"  Text="{Binding UpdateSubViewModel.VersionText}" />
        </StackPanel>
    </Grid>
</Window>